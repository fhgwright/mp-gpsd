.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GPSD" 1 "" "" ""
.SH NAME
gpsd, xgps, xgpsspeed \- interface daemon for GPS receivers, test client, and speedometer
.SH "SYNOPSIS"
.ad l
.hy 0
.HP 5
\fBgpsd\fR [\-f\ \fIGPS\-devicename\fR] [\-S\ \fIlistener\-port\fR] [\-d\ \fIDGPS\-server\fR] [\-n] [\-N] [\-h] [\-P\ \fIpidfile\fR] [\-p\ \fIGPS\-devicename\fR] [\-D\ \fIdebuglevel\fR] [\-v]
.ad
.hy
.ad l
.hy 0
.HP 5
\fBxgps\fR [\fIX\-options\fR] [\-h] [\-v] [\fIserver\fR] [\-speedunits\ {\fBmph\fR\ |\ \fBkph\fR\ |\ \fBknots\fR}] [\-altunits\ {\fBfeet\fR\ |\ \fBmeters\fR}]
.ad
.hy
.ad l
.hy 0
.HP 10
\fBxgpsspeed\fR [\-rv] [\-nc\ \fIX\-color\fR] [\-h] [\-v] [\-speedunits\ {\fBmph\fR\ |\ \fBkph\fR\ |\ \fBknots\fR}] [\fIserver\fR]
.ad
.hy

.SH "DESCRIPTION"

.SS "gpsd"

.PP
gpsd is a monitor daemon that watches a TCP/IP port (2947 by default), waiting for applications to request location information from a GPS\&. The GPS is expected to be direct\-connected to the machine running gpsd via a USB or RS232C serial port\&. The port may be specified to gpsd at startup, or it may be set via a command shipped down the client socket (e\&.g\&. by a USB hotplug script)\&. Given a GPS device, gpsd discovers the correct port speed and protocol for it\&.

.PP
gpsd should be able to query any GPS that speaks either the standard textual NMEA 0183 protocol, or the binary Rockwell protocol used by EarthMate and some other GPSes, or the binary SiRF protocol used by SiRf\-II and SiRF\-Star chipsets, or the Garmin binary protocol used by the USB version of the Garmin 18 and other Garmin USB GPSes\&. gpsd effectively hides the differences among these\&.

.PP
Optionally, gpsd may get differential\-GPS corrections from a ground station running a RTCM\-S104 server; this will improve user error (UERE) from roughly 8 meters to roughly 2 meters, provided you are within 1000 kilometers or so of the ground station\&. (Actual error will be UERE times a dilution factor dependent on current satellite position\&.)

.PP
The program accepts the following options:

.TP
\-f
Set GPS device name (default is \fI/dev/gps\fR)\&.

.TP
\-S
Set TCP/IP port (default is 2947)\&.

.TP
\-d
Query a differential\-GPS (DGPS) server\&. If a suffix of the server name begins with ":" it is interpreted as a port number, overriding the default IANA\-assigned port of 2101\&. For DGPS servers available for use with this option, see DGPS corrections over the Internet: \fIhttp://www.wsrcc.com/wolfgang/gps/dgps-ip.html\fR\&.

.TP
\-n
Don't wait for a client to connect before polling the GPS\&. The wait is a feature; many serial GPSes go to a standby mode (not drawing power) before the host machine asserts DTR, so waiting for the first actual request can save valuable battery power on portable equipment\&. This option combines well with \-D2 to enable monitoring of the GPS data stream\&.

.TP
\-N
Don't daemonize; run in foreground\&. Mainly useful for debugging\&.

.TP
\-h
Display help message and terminate\&.

.TP
\-P
Specify the name and path to record the daemon's process ID\&.

.TP
\-p
Obsolete synonym for \-f\&. May be removed in a future release\&.

.TP
\-D
Set debug level\&. At debug levels 2 and above, gpsd reports incoming sentence and actions to standard error\&.

.TP
\-v
Dump version and exit\&.

.PP
The request protocol for gpsd clients is very simple\&. Each request normally consists of a single ASCII character followed by a newline\&. Case of the request character is ignored, Each request returns a line of response text ended by a CR/LF\&. Requests and responses are as follows, with %f standing for a decimal float numeral and %d for decimal integer numeral:

.TP
a
The current altitude as "A=%f", meters above mean sea level\&.

.TP
b
The B command with no argument returns four fields giving the parameters of the serial link to the GPS as "B=%d %d %c %d"; baud rate, byte size, parity, (currently always N) and stop bits (1 or 2)\&. The command "B=%d" sets the baud rate, not changing parity or stop bits; watch the response, because it is possible for this to fail if the GPS does not support a speed\-switching command\&. In case of failure, the daemon and GPS will continue to communicate at the old speed\&.

.TP
c
Returns, as "C=%d", the cycle time of updates in seconds\&.

.TP
d
Returns the UTC time in the ISO 8601 format, "D=yyyy\-mm\-ddThh:nmm:ss\&.ssZ"\&. Digits of precision in the fractional\-seconds part will vary and may be zero\&.

.TP
e
Returns "E=%f %f %f": three estimated position errors in meters -- total, horizontal, and vertical (1\-sigma or 66% confidence level)\&. Note: many GPSes do not supply these numbers\&. When the GPS does not supply them, gpsd computes them from satellite DOP using fixed figures for expected non\-DGPS and DGPS range errors in meters\&. A value of zero for any of these numbers should be taken to mean that component of DOP is not available\&. See also the 'q' command\&.

.TP
f
Gets or sets the active GPS device name\&. The bare command 'f' requests a response containing 'f=' followed by the name of the active GPS device\&. The command may be followed by an '=', in which case all following printable characters up to the next CR/LF are interpreted as the name of a trial GPS device\&. If there are no other clients active, the trial device is opened and read to see if a GPS can be found there\&. If it can, the trial device becomes the active device and the trial device name is stored to be opened at the time of the next client request, replacing the old one\&. The response to this form of the command is to list the name of the active device\&.

.TP
i
Returns a text string identifying the GPS\&. The string may contain spaces and is terminated by CR\-LF\&.

.TP
l
Returns three fields: a protocol revision number, the gpsd version, and a list of accepted request letters\&.

.TP
m
The NMEA mode as "M=%d"\&. 0=no mode value yet seen, 1=no fix, 2=2D (no altitude), 3=3D (with altitude)\&.

.TP
n
Get or set the the GPS driver mode\&. Without argument, reports the mode as "N=%d"; N=0 means NMEA mode and N=1 means alternate mode (binary if it has one, for SiRF chipsets in particular)\&. With argument, set the mode if possible; the new mode will be reported in the response\&.

.TP
o
Attempts to return a complete time/position/velocity report as a unit\&. Any field for which data is not available being reported as ?\&. If there is no fix, the response is simply "O=?", otherwise a timestamp is always reported\&. Fields are as follows, in order:


.RS

.TP
timestamp
Seconds since the Unix epoch, GMT\&. May have a fractional part of up to \&.01sec precision\&.

.TP
time error
Estimated timestamp error in seconds (%f)\&.

.TP
latitude
Latitude as in the P report (%f, degrees)\&.

.TP
longitude
Longitude as in the P report (%f, degrees)\&.

.TP
altitude
Altitude as in the A report (%f, meters)\&.

.TP
horizontal error estimate
Horizontal error estimate as in the E report (%f, meters)\&.

.TP
vertical error estimate
Vertical error estimate as in the E report (%f, meters)\&.

.TP
course over ground
Track as in the T report (%f, degrees)\&.

.TP
speed over ground
Speed as in the V report (%f, knots)\&.

.TP
climb/sink
Vertical velocity as in the U report (%f, meters/sec)\&.

.TP
estimated error in course over ground
Error estimate for course (%f, degrees)\&.

.TP
estimated error in speed over ground
Error estimate for speed (%f, knots)\&.

.TP
climb/sink
Error estimate for climb/sink (%f, meters/sec)\&.

.RE
.IP
Note: this command is experimental and still under development\&. Currently the time error, track error, groundspeed error and climb/sink error fields are always ?\&.

.TP
p
Returns the current position in the form "P=%f %f"; numbers are in degrees, latitude first\&.

.TP
q
Returns "Q=%d %f %f %f": a count of satellites used in the last fix, and three dimensionless dilution\-of\-precision (DOP) numbers -- total, horizontal, and vertical\&. These are computed from the satellite geometry; they are factors by which to multiply the estimated UERE (user error in meters at specified confidence level due to ionospheric delay, multipath reception, etc\&.) to get actual circular error ranges in meters at the same confidence level\&. See also the 'e' command\&. Note: Some GPSes may fail to report these, or report only one of them (often HDOP); a value of 0\&.0 should be taken as an indication that the data is not available\&.

.TP
r
Sets or toggles 'raw' mode\&. Return "R=0" or "R=1"\&. In raw mode you read the NMEA data stream from the GPS\&. (Non\-NMEA GPSes get their communication format translated to NMEA on the fly\&.) The command 'r' immediately followed by the digit '1' or the plus sign '+' sets raw mode\&. The command 'r' followed by the digit '0' or the minus sign '\-' clears raw mode\&. The command 'r' with neither suffix toggles raw mode\&.

.TP
s
The NMEA status as "S=%d"\&. 0=no fix, 1=fix, 2=DGPS\-corrected fix\&.

.TP
t
Track made good; course "T=%f" in degrees from true north\&.

.TP
u
Current rate of climb as "U=%f" in meters per second\&. Some GPSes (non\-Sirf\-II based) do not report this, in that case gpsd computes it using the altitude from the last fix (if available)\&.

.TP
v
The current speed over ground as "V=%f" in knots\&.

.TP
w
Sets or toggles 'watcher' mode (see the descroiption below)\&. Return "W=0" or "W=1"\&.The command 'w' immediately followed by the digit '1' or the plus sign '+' sets watcher mode\&. The command 'w' followed by the digit '0' or the minus sign '\-' clears watcher mode\&. The command 'w' with neither suffix toggles watcher mode\&.

.TP
x
Returns "X=1" if the GPS is online, "X=0" if not\&.

.TP
y
Returns Y= followed by a count not more than 12, followed by that many quintuples of satellite PRNs, elevation/azimuth pairs (elevation an integer formatted as %d in range 0\-90, azimuth an integer formatted as %d in range 0\-359), signal strengths in decibels, and 1 or 0 according as the satellite was or was not used in the last fix\&. Each number is followed by one space\&.

.TP
z
The Z command returns daemon profiling information of interest to gpsd developers\&. The format of this string is subject to change without notice\&.

.PP
Note that a response consisting of just ? following the = means that there is no valid data available\&.

.PP
Requests can be concatenated and sent as a string; gpsd will then respond with a comma\-separated list of replies\&.

.PP
Every gpsd reply will start with the string "GPSD" followed by the replies\&. Examples:

.IP

      query:       "p\\n"
      reply:       "GPSD,P=36\&.000000 123\&.000000\\r\\n"

      query:       "d\\n"
      reply:       "GPSD,D=2002\-11\-16T02:45:05\&.12Z\\r\\n"

      query:       "va\\n"
      reply:       "GPSD,V=0\&.000000,A=37\&.900000\\r\\n"

.PP
When clients are active but the GPS is not responding, gpsd will spin trying to open the GPS device once per second\&. Thus, it can be left running in background and survive having the GPS repeatedly unplugged and plugged back in\&.

.PP
The recommended mode for clients is watcher mode\&. In watcher mode gpsd ships a line of data to the client each time the the GPS sends a sentence, but rather than being raw NMEA the line is a gpsd response as if the user had just sent some set of gpsd commands\&. That set of commands is the minimum for which the incoming sentence is relevant -- e\&.g\&., a GGA sentence ships a "pdasm" response because it contains position, date, altitude, and GPS mode data\&. Additionally, watching clients get notifications in the form X=0 or X=1 when the online/offline status of the GPS changes\&.

.PP
Sending SIGHUP to a running gpsd forces it to close the GPS and all client connections\&. It will then attempt to reconnect to the GPS and resume listening for client connections\&. This may be useful if your GPS enters a wedged or confused state but can be soft\-reset by pulling down DTR\&.

.PP
When gpsd receives a sentence with a timestamp, it packages the received timestamp with current local time and sends it to a shared\-memory segment with an ID known to ntpd, the network time synchronization daemon\&. If ntpd has been properly configured to receive this message, it will be used to correct the system clock\&. Note that because GPS clocks only return 0\&.01sec resolution, ntpd is unlikely to use this cue unless your system is off\-net\&. Furthermore, note that this feature is experimental and currently operates with SiRF GPSes only; making it work with other GPSes that report subsecond time resolution may come later\&.

.PP
Here is a sample \fIntp\&.conf\fR configuration stanza telling ntpd how to read the GPS notfications:

.nf

server 127\&.127\&.28\&.0 minpoll 4 maxpoll 4
fudge 127\&.127\&.28\&.0 refid GPS

.fi

.PP
The magic pseudo\-IP address 127\&.127\&.28\&.0 identifies unit 0 of the ntpd shared\-memory driver, which is what gpsd writes to\&. With this configuration, ntpd will read the timestamp posted by gpsd every 16 seconds; \fBntpq \-p\fR should show the time difference when it is not very large\&.

.SS "xgps"

.PP
xgps is a simple test client for gpsd with an X interface\&. It displays current GPS animation and (for GPSes that support the feature) the locations of accessible satellites\&.

.PP
xgps accepts an \-h option as for gpsd, or a \-v option to dump the package version and exit\&. An optional argument may specify an server to get data from; a colon\-separated suffix is taken as a port number\&. The misfeature of previous versions that allowed it to direct\-connect to the serial device has been removed\&.

.PP
The \-speedunits option can be used to set the speed units for display; follow the keyword with knots for nautical miles per hour, kph for kilometres per hour, or mph for miles per hour\&. The default is miles per hour\&. This option can also be set as the X resource 'speedunits'\&.

.PP
The \-altunits option can be used to set the altitude units for display; follow the keyword with 'meters' or 'feet'\&. The default is feet\&. This option can also be set as the X resource 'altunits'\&.

.SS "xgpsspeed"

.PP
xgpsspeed is a speedometer that uses position information from the GPS\&. It accepts an \-h option and optional argument as for gps, or a \-v option to dump the package version and exit\&. Additionally, it accepts \-rv (reverse video) and \-nc (needle color) options\&.

.PP
The \-speedunits option can be used to set the speed units for display; follow the keyword with knots for nautical miles per hour, kph for kilometres per hour, or mph for miles per hour\&. The default is miles per hour\&. This option can also be set as the X resource 'speedunits'\&.

.SH "LIMITATIONS"

.PP
There is a limitation in the accuracy of gpsd\-using applications that stems from the fact that gpsd waits passively for updates from the sensor rather than actively polling for them (which can't be done in a device\-independent way)\&. Most GPSes ship updates just once per second\&. At 50km/h (31mi/h) that's 13\&.8 meters change in position between updates\&. This is good enough if you're on foot or in a car but not good enough for aviation applications\&.

.SH "APPLICABLE STANDARDS"

.PP
The official NMEA protocol standard is available on paper from the National Marine Electronics Association: \fIhttp://www.nmea.org/pub/0183/\fR\&. A description of the protocol is available on the Web: \fIhttp://vancouver-webpages.com/peter/nmeafaq.txt\fR\&. gpsd parses the following NMEA sentences: GPRMC, GPGLL, GPVTG, GPGGA, GPGSA, GPGSV\&. Note that gpsd returns pure decimal degrees, not the hybrid degree/minute format described in the NMEA standard\&.

.SH "SEE ALSO"

.PP
 \fBlibgps\fR(3)  \fBlibgpsd\fR(3)  \fBgpsprobe\fR(1)  \fBgpsprof\fR(1)  \fBgpsfake\fR(1) 

.SH "AUTHORS"

.PP
Remco Treffcorn, Derrick Brashear, Russ Nelson, Eric S\&. Raymond\&. This manual page by Eric S\&. Raymond <esr@thyrsus\&.com>\&. There is a project page, with xgps screenshots, here: \fIhttp://gpsd.berlios.de/\fR\&.

